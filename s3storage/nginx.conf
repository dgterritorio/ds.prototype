# nginx.conf
# nginc conf from https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html
# Upstream for S3 API

upstream minio_api {
    server minio1:9000;
    server minio2:9000;
}

# Upstream for MinIO Console
upstream minio_console {
    server minio1:9001;
    server minio2:9001;
}

# Server block for S3 API (Port 9000)
server {
    listen 9000;
    server_name minio.local;  # Use a local domain or IP for testing
    ignore_invalid_headers off;
    client_max_body_size 0;
    proxy_buffering off;
    proxy_request_buffering off;

    location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_connect_timeout 300;
      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      chunked_transfer_encoding off;

      # WebSocket Support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_pass http://minio_api;
    }
}

# Server block for MinIO Console (Port 9001)
server {
    listen 9001;
    server_name minio.local;  # Use a local domain or IP for testing
    ignore_invalid_headers off;
    client_max_body_size 0;
    proxy_buffering off;
    proxy_request_buffering off;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
        
        # WebSocket Support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_pass http://minio_console;
    }
}
